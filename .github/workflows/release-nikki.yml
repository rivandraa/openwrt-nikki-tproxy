name: release-nikki

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: ${{ matrix.arch }}-${{ matrix.branch }} build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - aarch64_generic
          - x86_64
        branch:
          - openwrt-24.10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build package
        uses: openwrt/gh-action-sdk@main
        env:
          ARCH: ${{ matrix.arch }}-${{ matrix.branch }}
          FEEDNAME: nikki
          PACKAGES: luci-app-nikki
          NO_REFRESH_CHECK: true

      - name: Extract package versions
        id: extract_version
        run: |
          set -e
          PKG_DIR="bin/packages/${{ matrix.arch }}/nikki"

          # luci-app-nikki
          PKG_FILE_LUCI=$(find "$PKG_DIR" -name 'luci-app-nikki_*.ipk' | head -n 1)
          [ -z "$PKG_FILE_LUCI" ] && echo "❌ luci-app-nikki not found!" && exit 1
          VERSION_LUCI=$(basename "$PKG_FILE_LUCI" | sed -E 's/^luci-app-nikki_([^_]+)_.*\.ipk/\1/')

          # nikki
          PKG_FILE_NIKKI=$(find "$PKG_DIR" -name 'nikki_*.ipk' | head -n 1)
          [ -z "$PKG_FILE_NIKKI" ] && echo "❌ nikki not found!" && exit 1
          VERSION_NIKKI=$(basename "$PKG_FILE_NIKKI" | sed -E 's/^nikki_([^_]+)_.*\.ipk/\1/')

          echo "version_luci=$VERSION_LUCI" >> $GITHUB_OUTPUT
          echo "version_nikki=$VERSION_NIKKI" >> $GITHUB_OUTPUT

      - name: Create release metadata
        id: release_meta
        run: |
          VER_LUCI="${{ steps.extract_version.outputs.version_luci }}"
          VER_NIKKI_RAW="${{ steps.extract_version.outputs.version_nikki }}"
          ARCH="${{ matrix.arch }}"
          BRANCH="${{ matrix.branch }}"

          # Bersihkan versi nikki (2025-06-25~v1.19.11-Mod-r1 -> v1.19.11-Mod-r1)
          VER_NIKKI=$(echo "$VER_NIKKI_RAW" | sed -E 's/^[0-9]{4}-[0-9]{2}-[0-9]{2}~//')

          # Final tag & ZIP name
          TAG_NAME="Nikki-TProxy-${VER_LUCI}"
          ZIP_NAME="${TAG_NAME}_Nikki_${VER_NIKKI}_${ARCH}-${BRANCH}"
          REL_NAME="${TAG_NAME}"

          echo "tagname=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "zipname=$ZIP_NAME" >> $GITHUB_OUTPUT
          echo "relname=$REL_NAME" >> $GITHUB_OUTPUT

      - name: Compress .ipk files to ZIP
        run: |
          mkdir -p output
          cp bin/packages/${{ matrix.arch }}/nikki/*.ipk output/
          zip -j "${{ steps.release_meta.outputs.zipname }}.zip" output/*.ipk

      - name: Upload ZIP to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.release_meta.outputs.tagname }}
          name: ${{ steps.release_meta.outputs.relname }}
          files: ${{ steps.release_meta.outputs.zipname }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: Upload ZIP to Telegram Channel
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          FILE="${{ steps.release_meta.outputs.zipname }}.zip"

          # Buat hashtag dengan format: Nikki_TProxy_v_1_23_2_Mod_r1
          CLEAN_TAG="$(echo "${{ steps.release_meta.outputs.tagname }}" | sed -E 's/Nikki-TProxy-//' | sed 's/\./_/g; s/-/_/g')"
          HASH_TAG="Nikki_TProxy_${CLEAN_TAG}"

          curl -s -X POST https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendDocument \
            -F chat_id="${TELEGRAM_CHAT_ID}" \
            -F document=@"$FILE;filename=$(basename "$FILE")" \
            -F caption="🎉 *Release* #${HASH_TAG}

          🆎 luci-app-nikki: \`${{ steps.extract_version.outputs.version_luci }}\`
          🧩 nikki: \`${{ steps.extract_version.outputs.version_nikki }}\`
          📦 Arch: \`${{ matrix.arch }}\`
          🌿 Branch: \`${{ matrix.branch }}\`" \
            -F parse_mode="Markdown"
