name: release-nikki

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: ${{ matrix.arch }}-${{ matrix.branch }} build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - aarch64_cortex-a53
          - aarch64_generic
          - x86_64
        branch:
          - openwrt-24.10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build package
        uses: openwrt/gh-action-sdk@main
        env:
          ARCH: ${{ matrix.arch }}-${{ matrix.branch }}
          FEEDNAME: nikki
          PACKAGES: luci-app-nikki
          NO_REFRESH_CHECK: true

      - name: Extract package versions
        id: extract_version
        run: |
          set -e
          PKG_DIR="bin/packages/${{ matrix.arch }}/nikki"

          PKG_FILE_LUCI=$(find "$PKG_DIR" -name 'luci-app-nikki_*.ipk' | head -n 1)
          if [[ -z "$PKG_FILE_LUCI" ]]; then
            echo "❌ luci-app-nikki package file not found!"
            exit 1
          fi
          VERSION_LUCI=$(basename "$PKG_FILE_LUCI" | sed -E 's/^luci-app-nikki_([^_]+)_.*\.ipk/\1/')
          echo "version_luci=$VERSION_LUCI" >> $GITHUB_OUTPUT

          PKG_FILE_NIKKI=$(find "$PKG_DIR" -name 'nikki_*.ipk' | head -n 1)
          if [[ -z "$PKG_FILE_NIKKI" ]]; then
            echo "❌ nikki package file not found!"
            exit 1
          fi
          VERSION_NIKKI=$(basename "$PKG_FILE_NIKKI" | sed -E 's/^nikki_([^_]+)_.*\.ipk/\1/')
          echo "version_nikki=$VERSION_NIKKI" >> $GITHUB_OUTPUT

      - name: Create release metadata
        id: release_meta
        run: |
          VERSION_LUCI="${{ steps.extract_version.outputs.version_luci }}"
          VERSION_NIKKI="${{ steps.extract_version.outputs.version_nikki }}"

          REL_NAME="Nikki-TProxy-${VERSION_LUCI}"
          ZIP_NAME="Nikki-TProxy-${VERSION_LUCI}_Nikki-${VERSION_NIKKI}_${{ matrix.arch }}-${{ matrix.branch }}"
          TAG_NAME=$(echo "$REL_NAME" | tr ' ~' '--')

          echo "relname=$REL_NAME" >> $GITHUB_OUTPUT
          echo "zipname=$ZIP_NAME" >> $GITHUB_OUTPUT
          echo "tagname=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Compress .ipk files to ZIP
        run: |
          mkdir -p output
          cp bin/packages/${{ matrix.arch }}/nikki/*.ipk output/
          zip -j ${{ steps.release_meta.outputs.zipname }}.zip output/*.ipk

      - name: Upload ZIP to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.release_meta.outputs.tagname }}
          name: ${{ steps.release_meta.outputs.relname }}
          files: ${{ steps.release_meta.outputs.zipname }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: Upload ZIP to Telegram Channel
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          # Ambil variabel penting dari step sebelumnya
          TAGNAME="${{ steps.release_meta.outputs.tagname }}"  # e.g. v1.23.2-Mod-r1
          VER_NIKKI="${{ steps.extract_version.outputs.version_nikki }}"  # e.g. 2025-06-25~v1.19.11-Mod-r1
          VER_LUCI="${{ steps.extract_version.outputs.version_luci }}"    # e.g. v1.19.11-Mod-r1
          ARCH="${{ matrix.arch }}"                                       # e.g. aarch64_generic
          BRANCH="${{ matrix.branch }}"                                   # e.g. openwrt-24.10
      
          # Normalisasi versi nikki (hindari karakter problematik di filename)
          SAFE_NIKKI=$(echo "$VER_NIKKI" | sed 's/~/_/g')
          
          # Format tagname untuk caption (ubah - jadi _)
          TAG_FORMATTED=$(echo "$TAGNAME" | sed 's/-/_/g')
      
          # Buat nama file final
          FINAL_ZIP="Nikki-TProxy-${TAGNAME}_Nikki_${SAFE_NIKKI}_${ARCH}-${BRANCH}.zip"
      
          # Salin file hasil build ke nama final
          cp "${{ steps.release_meta.outputs.zipname }}.zip" "$FINAL_ZIP"
      
          # Siapkan caption untuk Telegram
          CAPTION=$(cat <<EOF
          🎉 *Release #Nikki-TProxy-${TAG_FORMATTED}*
          
          🆎 luci-app-nikki: \`${VER_LUCI}\`
          🧩 nikki: \`${VER_NIKKI}\`
          📦 Arch: \`${ARCH}\`
          🌿 Branch: \`${BRANCH}\`
          EOF
              )
  
          # Upload ke Telegram
          curl -s -X POST https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendDocument \
          -F chat_id="${TELEGRAM_CHAT_ID}" \
          -F "document=@$FINAL_ZIP;filename=$FINAL_ZIP" \
          -F caption="$CAPTION" \
          -F parse_mode="Markdown"
